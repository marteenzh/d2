<?php

use \Drupal\Core\Form\FormStateInterface;
use \Drupal\Core\Entity\EntityInterface;
use \Drupal\Core\Entity\ContentEntityFormInterface;
use \Drupal\Core\Entity\EntityFormInterface;
use \Drupal\autosave_form\Form\AutosaveEntityFormHandler;
use \Drupal\autosave_form\Form\AutosaveEntityFormHandlerInterface;

/**
 * Implements hook_entity_type_alter().
 *
 * Sets the default autosave form handler to the entity type if it is not
 * defined.
 *
 * @see \Drupal\Core\Entity\Annotation\EntityType
 */
function autosave_form_entity_type_alter(array &$entity_types) {
  // Provide defaults for autosave info.
  /** @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  foreach ($entity_types as $entity_type) {
    if (!$entity_type->hasHandlerClass('autosave_form')) {
      $entity_type->setHandlerClass('autosave_form', AutosaveEntityFormHandler::class);
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function autosave_form_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $active_on = \Drupal::configFactory()->get('autosave_form.settings')->get('active_on');
  $form_object = $form_state->getFormObject();

  if ($form_object instanceof ContentEntityFormInterface) {
    if (!$active_on['content_entity_forms']) {
      return;
    }
  }
  elseif ($form_object instanceof EntityFormInterface) {
    if (!$active_on['config_entity_forms']) {
      return;
    }
  }
  else {
    return;
  }

  // Allow autosave only for entity form routes, as forms might be included in
  // blocks and other places and it is impossible to determine to which URL we
  // have to post the autosave submit to. Also we don't support embedded forms
  // as e.g. it might be surprising for the user getting autosave on the entity
  // view, because e.g. a block is using an entity form.
  $route =  \Drupal::routeMatch()->getRouteObject();
  if ($route && ($route_defaults = $route->getDefaults()) && isset($route_defaults['_entity_form'])) {
    list($entity_type_id, $form_op) = explode('.', $route_defaults['_entity_form']);
    $entity = $form_object->getEntity();
    if (($entity->getEntityTypeId() != $entity_type_id) || ($form_object->getOperation() != $form_op)) {
      return;
    }
  }
  else {
    return;
  }

  $entity_type_manager = \Drupal::entityTypeManager();
  if ($entity_type_manager->hasHandler($entity->getEntityTypeId(), 'autosave_form')) {
    $autosave_form_handler = $entity_type_manager->getHandler($entity->getEntityTypeId(), 'autosave_form');
    if ($autosave_form_handler instanceof AutosaveEntityFormHandlerInterface) {
      $autosave_form_handler->formAlter($form, $form_state);
    }
  }
}

/**
 * Implements hook_entity_update().
 */
function autosave_form_entity_update(EntityInterface $entity) {
  // Until a conflict management is available the autosaved entity states have
  // to be removed when the entity is saved.
  /** @var \Drupal\autosave_form\Storage\AutosaveEntityFormStorageInterface $autosave_entity_storage */
  $autosave_entity_form_storage = \Drupal::service('autosave_form.entity_form_storage');
  $autosave_entity_form_storage->purgeAutosavedEntityState($entity->getEntityTypeId(), $entity->id());
}
